import telebot
import requests
import threading
import json
from datetime import timedelta
import time
from telebot.types import BotCommand

with open('modes.json', 'r') as file:
    modes = json.load(file)


parse_mode='Markdown'

tracked_users = {}
active_trackers = {} 
tracking_flags = {}

BOT_TOKEN = '7676215651:AAGditbGG3FnNWmaQR_SHOGwurmVxIICYVs'
bot = telebot.TeleBot(BOT_TOKEN)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–µ–∂–∏–º–µ –ø–æ ID
def get_mode_data(mode_id):
    for mode in modes:
        if mode['id'] == mode_id:
            return mode
    return None  # –ï—Å–ª–∏ —Ä–µ–∂–∏–º –Ω–µ –Ω–∞–π–¥–µ–Ω

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(
        message.chat.id, 
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–≥—Ä–æ–∫–∞ VimeWorld.\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.\n"
    )
@bot.message_handler(commands=['stats'])
def get_stats(message):
    try:
        parts = message.text.split(' ')
        nickname = parts[1]
        game_mode = parts[2] if len(parts) > 2 else ''  # –ï—Å–ª–∏ —Ä–µ–∂–∏–º –Ω–µ —É–∫–∞–∑–∞–Ω, –æ—Å—Ç–∞–≤–ª—è–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
        
        # –ü–æ–ª—É—á–∞–µ–º ID –∏–≥—Ä–æ–∫–∞ —á–µ—Ä–µ–∑ –µ–≥–æ –Ω–∏–∫–Ω–µ–π–º
        response = requests.get(f'https://api.vimeworld.com/user/name/{nickname}')
        
        if response.status_code == 200:
            data = response.json()
            if isinstance(data, list) and len(data) > 0:
                player = data[0]  # –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞
                user_id = player['id']
                
                # –ï—Å–ª–∏ —Ä–µ–∂–∏–º –Ω–µ —É–∫–∞–∑–∞–Ω, –≤—ã–≤–æ–¥–∏–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∂–∏–º—ã
                if not game_mode:
                    available_modes = [mode['id'] for mode in modes]
                    available_modes_text = "\n".join(available_modes)
                    reply = f"‚ùå –†–µ–∂–∏–º –Ω–µ —É–∫–∞–∑–∞–Ω.\n–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∂–∏–º—ã:\n{available_modes_text}"
                else:
                    # –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º game_mode
                    stats_response = requests.get(f'https://api.vimeworld.com/user/{user_id}/stats?games={game_mode}')
                    
                    if stats_response.status_code == 200:
                        stats_data = stats_response.json()

                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ 'stats' –∏ –≤ –Ω—É–∂–Ω–æ–º —Ä–µ–∂–∏–º–µ
                        if 'stats' in stats_data and game_mode in stats_data['stats']:
                            game_stats = stats_data['stats'][game_mode]
                            global_data = game_stats.get('global', {})
                            seasonal_data = game_stats.get('seasonal', {}).get('monthly', {})

                            mode_info = get_mode_data(game_mode)  # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–∂–∏–º–µ –∏–∑ JSON
                            
                            if mode_info:
                                stats_text = f"üë§ –ò–≥—Ä–æ–∫: {player['username']}\n"
                                stats_text += f"üìä –£—Ä–æ–≤–µ–Ω—å: {player['level']}\n"
                                stats_text += f"üèÖ –†–µ–∂–∏–º: {mode_info['name']}\n"
                                stats_text += "\n"
                                for stat in mode_info['global_stats']:
                                    stat_value = global_data.get(stat, 0)
                                    stats_text += f"üìà {stat}: {stat_value}\n"

                                stats_text += "\n"
                            if 'season' in stats_data['stats'][game_mode] and 'monthly' in stats_data['stats'][game_mode]['season']:
                                monthly_data = stats_data['stats'][game_mode]['season']['monthly']
                                stats_text += "\nüìÖ –°–µ–∑–æ–Ω–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (monthly):\n"
                                for season_stat in mode_info['season_stats']['monthly']:
                                    season_stat_value = monthly_data.get(season_stat, 0)
                                    stats_text += f"üìä {season_stat}: {season_stat_value}\n"

                                reply = stats_text
                            else:
                                reply = f"‚ùå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–∂–∏–º–µ '{game_mode}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."
                        else:
                            reply = f"‚ùå –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è —Ä–µ–∂–∏–º–∞ '{game_mode}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."
                    else:
                        reply = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞."
            else:
                reply = "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω."
        else:
            reply = "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω."

    except IndexError:
        reply = "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π: /stats <–Ω–∏–∫> <—Ä–µ–∂–∏–º>"
    except Exception as e:
        reply = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}"

    bot.send_message(message.chat.id, reply)


@bot.message_handler(commands=['session'])
def get_session(message):
    try:
        nickname = message.text.split(' ')[1]
        response = requests.get(f'https://api.vimeworld.com/user/name/{nickname}')
        
        if response.status_code == 200:
            data = response.json()
            if isinstance(data, list) and len(data) > 0:
                player = data[0]  # –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞
                user_id = player['id']
                session = requests.get(f'https://api.vimeworld.com/user/{user_id}/session')
                session_data = session.json()

                # –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –æ—Ç API —Å–µ—Å—Å–∏–∏
                print(f"–û—Ç–≤–µ—Ç –æ—Ç API —Å–µ—Å—Å–∏–∏: {session_data}")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ 'user' –∏ 'online'
                if 'user' in session_data and 'online' in session_data:
                    user_data = session_data['user']
                    online_data = session_data['online']

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –∏–≥—Ä–æ–∫ –æ–Ω–ª–∞–π–Ω
                    if online_data['value']:
                        session_status = online_data['message']
                        game_status = online_data['game']
                    else:
                        session_status = "–û—Ñ—Ñ–ª–∞–π–Ω"
                        game_status = "-"

                    reply = (
                        f"üíª –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Å—Å–∏–∏ –∏–≥—Ä–æ–∫–∞ {nickname}:\n"
                        f"üë§ –ò–≥—Ä–æ–∫: {user_data['username']}\n"
                        f"üìä –£—Ä–æ–≤–µ–Ω—å: {user_data['level']}\n"
                        f"üïπÔ∏è –°—Ç–∞—Ç—É—Å: {session_status}\n"
                        f"üéÆ –ò–≥—Ä–∞: {game_status}\n"
                        f"üíª –í—Ä–µ–º—è –∏–≥—Ä—ã: {user_data['playedSeconds']} —Å–µ–∫—É–Ω–¥"
                    )
                else:
                    reply = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Å—Å–∏–∏."
            else:
                reply = "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω."
        else:
            reply = "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω."

    except IndexError:
        reply = "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π: /session <–Ω–∏–∫–Ω–µ–π–º>"
    except Exception as e:
        reply = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}"

    bot.send_message(message.chat.id, reply)


@bot.message_handler(commands=['info'])
def get_player_info(message):
    try:
        nickname = message.text.split(' ')[1]
        response = requests.get(f'https://api.vimeworld.com/user/name/{nickname}')
        
        if response.status_code == 200:
            data = response.json()
            if isinstance(data, list) and len(data) > 0:
                player = data[0]  # –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞
                user_id = player['id']
                
                # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—Ä–µ–º—è –≤ –∏–≥—Ä–∞—Ö –≤ —É–¥–æ–±–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
                playtime = player['playedSeconds']

                # –î–∞–Ω–Ω—ã–µ –æ —Å–µ—Å—Å–∏–∏
                session = requests.get(f'https://api.vimeworld.com/user/{user_id}/session')
                session_data = session.json()

                # –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —Å–µ—Å—Å–∏–∏
                print(f"–û—Ç–≤–µ—Ç –æ—Ç API —Å–µ—Å—Å–∏–∏: {session_data}")
                
                if 'user' in session_data and 'online' in session_data:
                    user_data = session_data['user']
                    online_data = session_data['online']

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Å—Å–∏–∏
                    session_status = online_data.get('value', False)
                    game_status = online_data.get('game', "-")

                    if session_status:
                        session_status = "–í —Å–µ—Ç–∏"
                    else:
                        session_status = "–ù–µ –≤ —Å–µ—Ç–∏"
                    # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
                    playtime_seconds = user_data['playedSeconds']
                    playtime_timedelta = str(timedelta(seconds=playtime_seconds))


                    days, remainder = divmod(playtime_seconds, 86400)  # 86400 —Å–µ–∫—É–Ω–¥ –≤ –æ–¥–Ω–æ–º –¥–Ω–µ
                    hours, remainder = divmod(remainder, 3600)  # 3600 —Å–µ–∫—É–Ω–¥ –≤ –æ–¥–Ω–æ–º —á–∞—Å–µ
                    minutes, seconds = divmod(remainder, 60)  # 60 —Å–µ–∫—É–Ω–¥ –≤ –æ–¥–Ω–æ–π –º–∏–Ω—É—Ç–µ


                    formatted_playtime = f"{days} –¥–Ω. {hours} —á. {minutes} –º–∏–Ω. {seconds} —Å–µ–∫."
                    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
                    reply = (
                        f"üîé –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–æ–∫–µ {nickname}:\n"
                        f"üíé –ü—Ä–∏–≤–∏–ª–µ–≥–∏—è: {player.get('rank', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                        f"‚ö°Ô∏è –£—Ä–æ–≤–µ–Ω—å: {player.get('level', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                        f"üïí –í—Ä–µ–º—è –∏–≥—Ä—ã: {formatted_playtime}\n"
                        f"üë• –ì–∏–ª—å–¥–∏—è: <{player['guild']['tag']}> {player['guild']['name']}\n"
                        f"{'‚úÖ' if session_status == '–í —Å–µ—Ç–∏' else '‚ùå'} –°—Ç–∞—Ç—É—Å: {session_status}\n"
                        f"üéÆ –ò–≥—Ä–∞: {game_status}\n"
                    )
                else:
                    reply = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Å—Å–∏–∏."

            else:
                reply = "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω."
        else:
            reply = "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω."

    except IndexError:
        reply = "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π: /info <–Ω–∏–∫–Ω–µ–π–º>"
    except Exception as e:
        reply = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}"

    bot.send_message(message.chat.id, reply)


def track_player_status(chat_id, nickname):
    response = requests.get(f'https://api.vimeworld.com/user/name/{nickname}')
    if response.status_code != 200:
        bot.send_message(chat_id, f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–≥—Ä–æ–∫–∞ {nickname}")
        return
    data = response.json()
    if not data:
        bot.send_message(chat_id, f"‚ùå –ò–≥—Ä–æ–∫ {nickname} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return
    user_id = data[0]['id']

    last_status = None
    tracked_users.setdefault(chat_id, {})[nickname] = None

    while True:
        try:
            session = requests.get(f'https://api.vimeworld.com/user/{user_id}/session')
            if session.status_code == 200:
                session_data = session.json()
                if 'online' in session_data:
                    online_now = session_data['online']['value']
                    if tracked_users[chat_id][nickname] is None:
                        tracked_users[chat_id][nickname] = online_now
                    elif tracked_users[chat_id][nickname] != online_now:
                        tracked_users[chat_id][nickname] = online_now
                        status_msg = (
                            f"‚úÖ –ò–≥—Ä–æ–∫ {nickname} –∑–∞—à—ë–ª –≤ –∏–≥—Ä—É"
                            if online_now else
                            f"‚ùå –ò–≥—Ä–æ–∫ {nickname} –≤—ã—à–µ–ª –∏–∑ –∏–≥—Ä—ã"
                        )
                        bot.send_message(chat_id, status_msg)
            time.sleep(5)  
        except Exception as e:
            print(f"[–û–®–ò–ë–ö–ê –≤ —Å–ª–µ–∂–µ–Ω–∏–∏ –∑–∞ {nickname}]: {e}")
            break

def track_player_status(chat_id, nickname):
    try:
        response = requests.get(f'https://api.vimeworld.com/user/name/{nickname}')
        if response.status_code != 200:
            bot.send_message(chat_id, f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–≥—Ä–æ–∫–∞ {nickname}")
            return
        data = response.json()
        if not data:
            bot.send_message(chat_id, f"‚ùå –ò–≥—Ä–æ–∫ {nickname} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return
        user_id = data[0]['id']

        last_status = None
        tracking_flags.setdefault(chat_id, {})[nickname] = True

        while tracking_flags[chat_id][nickname]:
            try:
                session = requests.get(f'https://api.vimeworld.com/user/{user_id}/session')
                if session.status_code == 200:
                    session_data = session.json()
                    if 'online' in session_data:
                        online_now = session_data['online']['value']
                        if last_status is None:
                            last_status = online_now
                        elif last_status != online_now:
                            last_status = online_now
                            status_msg = (
                                f"‚úÖ –ò–≥—Ä–æ–∫ {nickname} –∑–∞—à—ë–ª –≤ –∏–≥—Ä—É"
                                if online_now else
                                f"‚ùå –ò–≥—Ä–æ–∫ {nickname} –≤—ã—à–µ–ª –∏–∑ –∏–≥—Ä—ã"
                            )
                            bot.send_message(chat_id, status_msg)
                time.sleep(30)
            except Exception as e:
                print(f"[–û–®–ò–ë–ö–ê –≤ —Å–ª–µ–∂–µ–Ω–∏–∏ –∑–∞ {nickname}]: {e}")
                break

        bot.send_message(chat_id, f"üõë –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ {nickname} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")
    except Exception as e:
        bot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞: {e}")

@bot.message_handler(commands=['notification'])
def notify_player_change(message):
    try:
        parts = message.text.split()
        if len(parts) < 2:
            bot.send_message(message.chat.id, "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π: /notification <–Ω–∏–∫–Ω–µ–π–º>")
            return
        nickname = parts[1]
        bot.send_message(message.chat.id, f"üîî –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ {nickname} –∑–∞–ø—É—â–µ–Ω–æ. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—Ö–æ–¥–µ/–≤—ã—Ö–æ–¥–µ –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Å—é–¥–∞.")
        thread = threading.Thread(target=track_player_status, args=(message.chat.id, nickname), daemon=True)
        active_trackers.setdefault(message.chat.id, {})[nickname] = thread
        thread.start()
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
@bot.message_handler(commands=['stopnotification'])
def stop_notify_player(message):
    try:
        parts = message.text.split()
        if len(parts) < 2:
            bot.send_message(message.chat.id, "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π: /stopnotification <–Ω–∏–∫–Ω–µ–π–º>")
            return
        nickname = parts[1]
        if message.chat.id in tracking_flags and nickname in tracking_flags[message.chat.id]:
            tracking_flags[message.chat.id][nickname] = False
        else:
            bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ {nickname} –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ.")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞: {e}")

@bot.message_handler(commands=['online'])
def get_online_info(message):
    try:
        response = requests.get('https://api.vimeworld.com/online')
        if response.status_code == 200:
            data = response.json()
            total = data.get('total', 0)
            separated = data.get('separated', {})

            reply = f"üü¢ *–û–Ω–ª–∞–π–Ω –Ω–∞ VimeWorld: {total} –∏–≥—Ä–æ–∫–æ–≤*\n\n"
            for mode_id, count in separated.items():
                mode_info = get_mode_data(mode_id)
                mode_name = mode_info['name'] if mode_info else mode_id.upper()
                reply += f"üéÆ {mode_name}: {count}\n"

            bot.send_message(message.chat.id, reply, parse_mode='Markdown')
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ–Ω–ª–∞–π–Ω–∞.")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")



@bot.message_handler(commands=['help'])
def help_command(message):
    help_text = (
        "üí° –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
        "/start - üöÄ –ù–∞—á–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º\n"
        "/stats <–Ω–∏–∫–Ω–µ–π–º> <—Ä–µ–∂–∏–º> - üìä –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–∞ –ø–æ –Ω–∏–∫–Ω–µ–π–º—É –∏ —Ä–µ–∂–∏–º—É\n"
        "üîî *–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —Ä–µ–∂–∏–º—É, —Ä–µ–∂–∏–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–∫–∞–∑–∞–Ω –≤ —Å–ø–∏—Å–∫–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤.\n\n"
        "/session <–Ω–∏–∫–Ω–µ–π–º> - üéÆ–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Å—Å–∏–∏ –∏–≥—Ä–æ–∫–∞\n\n"
        "/info <–Ω–∏–∫–Ω–µ–π–º> - ‚ÑπÔ∏è –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–æ–∫–µ\n\n"
        "/help - ‚ùì –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏\n\n"
        "/notification <–Ω–∏–∫–Ω–µ–π–º> - üîî –ù–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä–æ–∫–∞** (–≤—Ö–æ–¥/–≤—ã—Ö–æ–¥)\n"
        "üëæ *–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —á–∞—Ç, –∫–æ–≥–¥–∞ –∏–≥—Ä–æ–∫ –∑–∞—Ö–æ–¥–∏—Ç –∏–ª–∏ –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ –∏–≥—Ä—ã.\n\n"
        "/stopnotification <–Ω–∏–∫–Ω–µ–π–º> - üîï –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä–æ–∫–∞\n"
        "/online - üü¢ –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–Ω–ª–∞–π–Ω–µ –Ω–∞ VimeWorld\n"
    )
    bot.send_message(message.chat.id, help_text)

bot.set_my_commands([
    BotCommand("start", "üöÄ –ù–∞—á–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º"),
    BotCommand("stats", "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ –ø–æ –Ω–∏–∫–Ω–µ–π–º—É –∏ —Ä–µ–∂–∏–º—É"),
    BotCommand("session", "üéÆ –°–µ—Å—Å–∏—è: –≥–¥–µ –∏ –≤–æ —á—Ç–æ –∏–≥—Ä–∞–µ—Ç –∏–≥—Ä–æ–∫"),
    BotCommand("info", "‚ÑπÔ∏è –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–æ–∫–µ"),
    BotCommand("help", "‚ùì –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥"),
    BotCommand("notification", "üîî –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤—Ö–æ–¥/–≤—ã—Ö–æ–¥ –∏–≥—Ä–æ–∫–∞"),
    BotCommand("stopnotification", "üîï –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–∞"),
    BotCommand("online", "üü¢ –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–Ω–ª–∞–π–Ω–µ –Ω–∞ VimeWorld")
])


bot.polling(none_stop=True)